<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Parsecs Reach</title>
    <link>http://parsecsreach.com/tags/golang/</link>
    <description>Recent content in Golang on Parsecs Reach</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved - 2019</copyright>
    <lastBuildDate>Sat, 08 Dec 2018 13:28:33 +0000</lastBuildDate>
    
	<atom:link href="http://parsecsreach.com/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang Resparse</title>
      <link>http://parsecsreach.com/post/golangresparse/</link>
      <pubDate>Sat, 08 Dec 2018 13:28:33 +0000</pubDate>
      
      <guid>http://parsecsreach.com/post/golangresparse/</guid>
      <description>A little while ago I found my self needing to be able to parse screen resolutions when generating some images in a golang program. I created a library to do this and had a bit of fun optimising it. The result is open source on github. It is a very simple library with a single function but I thought it might be interesting to walk you through the process.</description>
    </item>
    
  </channel>
</rss>